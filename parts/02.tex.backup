\part{Theoretische Grundlagen}
\label{sec:theory}

\section{Web Performance}
\epigraph{``Human beings don’t like to wait. We don’t like waiting in line at a store, we don’t like waiting for our food at a restaurant, and we definitely don’t like waiting for Web pages to load.''}{Alberto Savoia}

Jeder Internetnutzer hat eine gewisse Toleranz gegenüber langsamen Webseiten. Wenn er auf eine Webseite zu lange warten muss, geht er zur Konkurrenz. Um dies zu verhindern, ist Web Performance in der letzten Zeit ein immer wichtigeres Thema geworden. Aber was bedeutet Web Performance eigentlich? Zum einen gibt es die subjektive Performance, die ein Besucher beim Browsen einer Webseite empfindet. Gibt es für den Nutzer bemerkbare Wartezeiten oder reagiert die Webseite schneller als die Wahrnehmungsschwelle? Solche Kriterien sind sehr wichtig bei interaktiven Webseiten und haben auch zum Erfolg von Ajax beigetragen. Zum anderen kann man auch eine objektive Aussage über die Geschwindigkeit, mit der eine Webseite generiert, ausgeliefert und beim Besucher im Browser angezeigt wird, treffen. 
\subsection{Usability}
Web Performance hat einen großen Einfluss auf die Bedienbarkeit von Webseiten. Ohne die starke Verbesserung ihrer Performance hätte Google mit GMail und ihren anderen Web Applikationen keinen Erfolg erzielen können. Nur wenn eine Anwendung auch in einer akzeptablen Geschwindigkeit auf Benutzerinteraktionen reagieren kann, hat sie eine Chance auf dem Markt zu bestehen. Es gibt einige Studien, die sich mit Web Usability auseinandersetzen. Zu den Ergebnissen gehörte unter anderem, dass langsamere Webseiten zu Vertrauensverlust sowie Nutzerfrustration führen. Als weitere Konsequenz ist der empfundene Qualitätsverlust zu nennen. Die genannten Punkte führen letztendlich zu niedrigeren Konversionsraten, das heißt, dass ...+ höheren Bailoutraten

%TODO niedrigere Konversionsraten und Bailoutraten erklären und Satz beenden

%TODO quelle?
\subsection{Google Ranking}
Für (Internet-)Firmen ist es von immenser Bedeutung gefunden zu werden. Ein Großteil der Internetnutzer sucht Angebote über die Google-Suche. Google hat mit ihrer Initiative ``Let's make the web faster'' für viel Entwicklung und Aktivität im Bereich Web Performance gesorgt und arbeitet zielgerichtet weiter in diese Richtung. Dazu gehört seit  2008 Google AdWords und seit 2010 die Google Suche selbst. Dies stellt viele Unternehmen vor die Aufgabe, ihre Webseite zu optimieren und zu beschleunigen, um im Google Ranking konkurrenzfähig zu bleiben. Wie genau Google die Webseiten testet, ist nur zum Teil bekannt, da diese Informationen zu Googles Geschäftsgeheimnissen gehören. Es finden sich aber einige Fakten, die bei der Optimierung für die Google Suche, im Bereich Web Performance, helfen können.
Bekannt ist, dass der Google Suchmaschinen Bot nichts mit der Geschwindigkeitsmessung zu tun hat und Google nur Daten von echten Nutzern, die die Google Toolbar in ihrem Browser installiert haben, nutzt. Leider sind Daten nur für Internet Explorer ab Version 6 und Firefox ab Version 2 verfügbar. Als Kriterium für die Bewertung wird die Onload Zeit gemessen. Dabei führt das verzögerte Nachladen von Inhalten zu einem besseren Ergebnis. Wenn eine Webseite für Google optimiert werden soll, muss also auch die Performance mit berücksichtigt werden. Performance ist aber nur ein Teil der Google Bewertung. Für Webseitenbetreiber gilt daher, dass aktuelle und gut strukturierte Inhalte nicht hinter die Performance gestellt werden dürfen.

%TODO bild?
%%http://www.webperformancetoday.com/2011/08/05/faqs-google-seo-search-ranking-website-speed/

\subsection{Serverlast}
Eine umfassende Verbesserung der Auslieferungszeiten von Webseiten hat direkten Einfluss auf die Serverperformance. Dies ist leicht in einem Experiment feststellbar, wie folgende Überlegung zeigt: Wenn eine Webseite nur noch die Hälfte der Zeit benötigt, um ausgeliefert zu werden, hat man doppelt soviel Auslieferungskapazität zur Verfügung. Das spart Kosten für Server und Traffic. Außerdem ermöglichen Caching und Optimierungen einen Großteil an Prozessorlast einzusparen, der dann für andere Aufgaben zur Verfügung steht. Besonders wichtig ist die Performance in Momenten besonders hoher Zugriffszahlen, zum Beispiel wenn eine Webseite in einem prominenten Newsportal erwähnt wird. Oftmals bricht dann die Webseite zusammen, weil die Administratoren nicht mir solch einem Ansturm gerechnet haben. Erwähnenswert ist das Newsportal www.heise.de auf dem regelmäßig davon gesprochen wird, es wurde eine Webseite ``geheist''. Noch problematischer wird es wenn ein Unternehmen Ziel krimineller Aktivitäten wird. Aktuelle zu beobachten ist das bei den Angriffen des Miner-Botnetzes auf mehrere deutsche Webseiten. Um sich vor solchen Distributed Denial of Service angriffen schützen zu können, ist eine Performante Webseite sehr wichtig um genug Ressourcen für Firewalls und andere Gegenmaßnahmen zur Verfügung zu haben.

\section{Performance Bottlenecks}
Performance Bottlenecks oder auch Performance Flaschenhälse genannt, beschreiben Schwachpunkte in einem Datenverarbeitungssystem. Auf Web Performance angewendet, kann man das in clientseitige Probleme und serverseitige Probleme unterteilen.
\subsection{Clientseitige Bottlenecks}
\subsubsection{Netzwerkverbindung}Die Netzwerkverbindung kann auf zwei Ebenen für Probleme sorgen. Zum einen kann eine hohe Latenz für langsame auch auf Serverseite auftreten, aber da kann mit mehr Servern und besseren Anbindungen Abhilfe geschafft werden. Viel problematischer wird das auf der Clientseite da selten bekannt ist mit welcher Anbindung Nutzer eine Webseite besuchen werden.%TODO bild netzwerk
Da in Deutschland der Breitbandausbau noch lange kein Stadium erreicht hat, der es Webseitenbetreibern erlauben würde auf die Größe der Webseite die sie an ihre Betrachter ausliefern keinen Wert zu legen. Der Breitbandausbau peilt für 2011 eine 100 prozentige Versorgung mit 1 Mbit/s an und so sind noch viele Nutzer sind mit langsamen Internetzugängen im Internet unterwegs. 

\subsubsection{Browser}
Als Schnittstelle zwischen Mensch und Webseite ist der Browser ein besonders kritischer Punkt und muss bei Web Performanceanalysen besonders beachtet werden. Zum einen müssen die verschiedenen Browserfamilien, mit ihren Eigenheiten und Problemen und zum anderen die Tatsache das ein Browser nur so schnell arbeiten kann, wie der Computer auf dem er ausgeführt wird zulässt, beachtet werden. Problemzonen sind:
\begin{itemize}
  \item Anzahl von zu berechnenden DOM-Elementen
  \item Javascript Ausführungszeiten
  \item Anzahl benötigter HTTP Zugriffe
  \item 

\end{itemize}

\subsubsection{DOM Elemente}
\subsection{Serverseitig}
So gut wie jede Website nutzt mittlerweile eine Datenbank, diese können verschiedenster Natur sein zum Beispiel:
\begin{itemize}
\item SQLite
\item MySQL
\item MSSQL
\item PostGreSQL
\item 
\end{itemize}
Oft sind diese Datenbanken ein Schwachpunkt für die Web-Performance, da meistens Daten von der Festplatte gelesen werden müssen und komplexe Abfragen viel Zeit in Anspruch nehmen können.
\subsubsection{Datenbankabfragen}

\subsubsection{Skriptausführung}
\subsubsection{Skriptkompilierung}

\section{Technologiestack und Optimierungsmöglichkeiten}
Im Rahmen dieser Bachelorarbeit werden verschiedenste Technologien verwendet und auf ihnen aufbauende Werkzeuge zu Hilfe genommen. Um zu verstehen wo Probleme lokalisiert sind und wie solche Schwachstellen zu finden sind muss man sich mit dem vorhandenem Technologiestack auseinandersetzen und ihn analysieren.
\begin{description}
  \item[Server] Ein Server ist ein Computer, der Informationen und Dienste für andere Computer zur Verfügung stellt
  \item[Betriebssystem] Die Software die auf dem Server läuft. In der pludoni GmbH wird das Linuxderivat Debian eingesetzt.
  \item[Datenbank] Als Datenbank wird eine strukturierte Sammlung von Daten bezeichnet. MySQL ist hier die erste Wahl.
  \item[Web Server] Der Web Server ist für die zuverlässige Auslieferung von Webseiten zuständig. Er beantwortet die Anfragen die die Nutzer mit dem Browser stellen. Apache2 wird dafür in der pludoni GmbH eingesetzt.
  \item[PHP] PHP ist eine Programmiersprache, die es Web Entwicklern ermöglicht dynamische Webseiten zu programmieren.
  \item[Drupal] Drupal ist ein Framework, welches in PHP geschrieben ist und viele direkt nutzbare Funktionen mitbringt. Dazu gehören unter anderem Administrationsoberflächen, Newsaggregatoren, Veröffentlichungsabläufe für Artikel und Blogbeiträge sowie Suchmaschinenoptimierungen. Außerdem ermöglicht Drupal die Installation weiterer, durch Nutzer entwickelte, Module. Dadurch wird eine fast unbegrenzte Funktionsvielfalt ermöglicht. Im vorliegenden Fall wird Drupal in der Version 5 eingesetzt.
  \item[Client] Im Browser der Nutzer kommt am Ende HTML an, dies wird durch Drupal generiert und vom Webserver ausgeliefert. Dabei werden Bilder verarbeitet Javascript Programme ausgeführt und andere Elemente wie Flashapplikationen und Videos berechnet. 
\end{description}

\subsection{Server}
\subsection{PHP}
\subsection{Drupal (5)}
Drupal ist ein Content-Management-System, dass heißt es ermöglicht dem Nutzer eine dynamische Webseite zu erstellen ohne spezielle Programmierkenntnisse zu besitzen. 
\subsection{Benchmark - Werkzeuge}
\subsection{Debugger / Profiler}
\section{Methoden der Web-Performance Optimierung}
Die Methoden zur Leistungssteigerung können wie im Technologiestack untergliedert werden und jedes Element muss für sich betrachtet werden.

\begin{description}
  \item[Server] Der einzige Parameter der am Server verbessert werden kann ist seine Leistung, dass heißt Datendurchsatz und Rechengeschwindigkeit. Dies geschieht durch CPU Upgrades oder Arbeitsspeichererweiterung. Weitergehend kann man die Festplattenzugriffsgeschwindigkeiten durch RAID Verbünde und neue Technologien wie SSD Speicher verbessern. 
  \item[Betriebssystem] Ansatzpunkte für Verbesserungen auf Betriebssystemebene sind Memory-Mapping, dass heißt Speicherbereiche die normalerweise auf der Festplatte liegen werden in den Arbeitsspeicher umgelagert um die Latenzen zu verringern. Dies wird genutzt um Caches zu beschleunigen, die normalerweise von der Festplatte lesen.
  \item[Datenbank] Auf Datenbankebene kann im Fall von MySQL nur beschränkt optimiert werden. Zum einen sind Indizes anzulegen bei häufig genutzten Tabellen und zum anderen kann man MyISAM statt InnoDB nutzen um Performanter zu sein.
  \item[Web Server] Optimierungen am Webserver sind sehr schwierig da die Webserver Performance hauptsächlich von der Serverleistung abhängt. Die Anzahl der gleichzeitigen Zugriffe wird maßgeblich durch den verfügbaren Arbeitsspeicher und die verfügbare Bandbreite eingeschränkt.
  \item[PHP] 
  \item[Drupal] 
  \item[HTML] 
\end{description}


%\input{parts/02-1}
%\input{parts/02-2}
